diff --git a/node_modules/expo-image/build/ExpoImage.web.d.ts b/node_modules/expo-image/build/ExpoImage.web.d.ts
index b7feabf..3d07222 100644
--- a/node_modules/expo-image/build/ExpoImage.web.d.ts
+++ b/node_modules/expo-image/build/ExpoImage.web.d.ts
@@ -1,3 +1,8 @@
 import { ImageNativeProps } from './Image.types';
-export default function ExpoImage({ source, placeholder, contentFit, contentPosition, placeholderContentFit, onLoad, transition, onError, responsivePolicy, onLoadEnd, priority, blurRadius, ...props }: ImageNativeProps): JSX.Element;
+export declare const ExpoImageModule: {
+    prefetch(urls: string | string[]): void;
+    clearMemoryCache(): Promise<boolean>;
+    clearDiskCache(): Promise<boolean>;
+};
+export default function ExpoImage({ source, placeholder, contentFit, contentPosition, placeholderContentFit, onLoad, transition, onError, responsivePolicy, onLoadEnd, priority, blurRadius, recyclingKey, ...props }: ImageNativeProps): JSX.Element;
 //# sourceMappingURL=ExpoImage.web.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-image/build/ExpoImage.web.d.ts.map b/node_modules/expo-image/build/ExpoImage.web.d.ts.map
index 02aa0d5..fd688ff 100644
--- a/node_modules/expo-image/build/ExpoImage.web.d.ts.map
+++ b/node_modules/expo-image/build/ExpoImage.web.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ExpoImage.web.d.ts","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAmC,MAAM,eAAe,CAAC;AAoClF,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,EAChC,MAAM,EACN,WAAW,EACX,UAAU,EACV,eAAe,EACf,qBAAqB,EACrB,MAAM,EACN,UAAU,EACV,OAAO,EACP,gBAAgB,EAChB,SAAS,EACT,QAAQ,EACR,UAAU,EACV,GAAG,KAAK,EACT,EAAE,gBAAgB,eAgFlB"}
\ No newline at end of file
+{"version":3,"file":"ExpoImage.web.d.ts","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAmC,MAAM,eAAe,CAAC;AAQlF,eAAO,MAAM,eAAe;mBACX,MAAM,GAAG,MAAM,EAAE,GAAG,IAAI;wBAQb,QAAQ,OAAO,CAAC;sBAIlB,QAAQ,OAAO,CAAC;CAGzC,CAAC;AA8BF,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,EAChC,MAAM,EACN,WAAW,EACX,UAAU,EACV,eAAe,EACf,qBAAqB,EACrB,MAAM,EACN,UAAU,EACV,OAAO,EACP,gBAAgB,EAChB,SAAS,EACT,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,GAAG,KAAK,EACT,EAAE,gBAAgB,eA4FlB"}
\ No newline at end of file
diff --git a/node_modules/expo-image/build/ExpoImage.web.js b/node_modules/expo-image/build/ExpoImage.web.js
index 79ee8ed..970f9b6 100644
--- a/node_modules/expo-image/build/ExpoImage.web.js
+++ b/node_modules/expo-image/build/ExpoImage.web.js
@@ -4,6 +4,21 @@ import ImageWrapper from './web/ImageWrapper';
 import loadStyle from './web/style';
 import useSourceSelection from './web/useSourceSelection';
 loadStyle();
+export const ExpoImageModule = {
+    prefetch(urls) {
+        const urlsArray = Array.isArray(urls) ? urls : [urls];
+        urlsArray.forEach((url) => {
+            const img = new Image();
+            img.src = url;
+        });
+    },
+    async clearMemoryCache() {
+        return false;
+    },
+    async clearDiskCache() {
+        return false;
+    },
+};
 function onLoadAdapter(onLoad) {
     return (event) => {
         const target = event.target;
@@ -29,44 +44,51 @@ const setCssVariables = (element, size) => {
     element?.style.setProperty('--expo-image-width', `${size.width}px`);
     element?.style.setProperty('--expo-image-height', `${size.height}px`);
 };
-export default function ExpoImage({ source, placeholder, contentFit, contentPosition, placeholderContentFit, onLoad, transition, onError, responsivePolicy, onLoadEnd, priority, blurRadius, ...props }) {
+export default function ExpoImage({ source, placeholder, contentFit, contentPosition, placeholderContentFit, onLoad, transition, onError, responsivePolicy, onLoadEnd, priority, blurRadius, recyclingKey, ...props }) {
     const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};
     const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';
     const blurhashStyle = {
         objectFit: placeholderContentFit || contentFit,
     };
     const { containerRef, source: selectedSource } = useSourceSelection(source, responsivePolicy, setCssVariables);
+    const initialNodeAnimationKey = (recyclingKey ? `${recyclingKey}-${placeholder?.[0]?.uri}` : placeholder?.[0]?.uri) ?? '';
+    const initialNode = placeholder?.[0]?.uri
+        ? [
+            initialNodeAnimationKey,
+            ({ onAnimationFinished }) => (className, style) => (React.createElement(ImageWrapper, { ...props, source: placeholder?.[0], style: {
+                    objectFit: imagePlaceholderContentFit,
+                    ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),
+                    ...style,
+                }, className: className, events: {
+                    onTransitionEnd: [onAnimationFinished],
+                }, contentPosition: { left: '50%', top: '50%' }, hashPlaceholderContentPosition: contentPosition, hashPlaceholderStyle: blurhashStyle })),
+        ]
+        : null;
+    const currentNodeAnimationKey = (recyclingKey
+        ? `${recyclingKey}-${selectedSource?.uri ?? placeholder?.[0]?.uri}`
+        : selectedSource?.uri ?? placeholder?.[0]?.uri) ?? '';
+    const currentNode = [
+        currentNodeAnimationKey,
+        ({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) => (className, style) => (React.createElement(ImageWrapper, { ...props, source: selectedSource || placeholder?.[0], events: {
+                onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],
+                onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],
+                onMount: [onMount],
+                onTransitionEnd: [onAnimationFinished],
+            }, style: {
+                objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,
+                ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),
+                ...style,
+            }, className: className, priority: priority, contentPosition: selectedSource ? contentPosition : { top: '50%', left: '50%' }, hashPlaceholderContentPosition: contentPosition, hashPlaceholderStyle: blurhashStyle, accessibilityLabel: props.accessibilityLabel })),
+    ];
     return (React.createElement("div", { ref: containerRef, className: "expo-image-container", style: {
             aspectRatio: String(aspectRatio),
             backgroundColor: backgroundColor?.toString(),
             transform: transform?.toString(),
             borderColor: borderColor?.toString(),
-            ...style,
-            overflow: 'hidden',
             position: 'relative',
+            overflow: 'hidden',
+            ...style,
         } },
-        React.createElement(AnimationManager, { transition: transition, initial: placeholder?.[0]?.uri
-                ? [
-                    placeholder?.[0]?.uri || '',
-                    ({ onAnimationFinished }) => (className, style) => (React.createElement(ImageWrapper, { source: placeholder?.[0], style: {
-                            objectFit: imagePlaceholderContentFit,
-                            ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),
-                            ...style,
-                        }, className: className, events: {
-                            onTransitionEnd: [onAnimationFinished],
-                        }, contentPosition: { left: '50%', top: '50%' }, blurhashContentPosition: contentPosition, blurhashStyle: blurhashStyle })),
-                ]
-                : null },
-            selectedSource?.uri || placeholder?.[0]?.uri,
-            ({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) => (className, style) => (React.createElement(ImageWrapper, { source: selectedSource || placeholder?.[0], events: {
-                    onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],
-                    onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],
-                    onMount: [onMount],
-                    onTransitionEnd: [onAnimationFinished],
-                }, style: {
-                    objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,
-                    ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),
-                    ...style,
-                }, className: className, priority: priority, contentPosition: selectedSource ? contentPosition : { top: '50%', left: '50%' }, blurhashContentPosition: contentPosition, blurhashStyle: blurhashStyle })))));
+        React.createElement(AnimationManager, { transition: transition, recyclingKey: recyclingKey, initial: initialNode }, currentNode)));
 }
 //# sourceMappingURL=ExpoImage.web.js.map
\ No newline at end of file
diff --git a/node_modules/expo-image/build/ExpoImage.web.js.map b/node_modules/expo-image/build/ExpoImage.web.js.map
index 27a6e69..42cd496 100644
--- a/node_modules/expo-image/build/ExpoImage.web.js.map
+++ b/node_modules/expo-image/build/ExpoImage.web.js.map
@@ -1 +1 @@
-{"version":3,"file":"ExpoImage.web.js","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ImageNativeProps, ImageSource, ImageLoadEventData } from './Image.types';\nimport AnimationManager from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/style';\nimport useSourceSelection from './web/useSourceSelection';\n\nloadStyle();\n\nfunction onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {\n  return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = event.target as HTMLImageElement;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null,\n      },\n      cacheType: 'none',\n    });\n  };\n}\n\nfunction onErrorAdapter(onError?: { (event: { error: string }): void }) {\n  return ({ source }: { source?: ImageSource | null }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`,\n    });\n  };\n}\n\nconst setCssVariables = (element: HTMLElement, size: DOMRect) => {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n};\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  contentFit,\n  contentPosition,\n  placeholderContentFit,\n  onLoad,\n  transition,\n  onError,\n  responsivePolicy,\n  onLoadEnd,\n  priority,\n  blurRadius,\n  ...props\n}: ImageNativeProps) {\n  const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const blurhashStyle = {\n    objectFit: placeholderContentFit || contentFit,\n  };\n  const { containerRef, source: selectedSource } = useSourceSelection(\n    source,\n    responsivePolicy,\n    setCssVariables\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"expo-image-container\"\n      style={{\n        aspectRatio: String(aspectRatio),\n        backgroundColor: backgroundColor?.toString(),\n        transform: transform?.toString(),\n        borderColor: borderColor?.toString(),\n        ...style,\n        overflow: 'hidden',\n        position: 'relative',\n      }}>\n      <AnimationManager\n        transition={transition}\n        initial={\n          placeholder?.[0]?.uri\n            ? [\n                placeholder?.[0]?.uri || '',\n                ({ onAnimationFinished }) =>\n                  (className, style) =>\n                    (\n                      <ImageWrapper\n                        source={placeholder?.[0]}\n                        style={{\n                          objectFit: imagePlaceholderContentFit,\n                          ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                          ...style,\n                        }}\n                        className={className}\n                        events={{\n                          onTransitionEnd: [onAnimationFinished],\n                        }}\n                        contentPosition={{ left: '50%', top: '50%' }}\n                        blurhashContentPosition={contentPosition}\n                        blurhashStyle={blurhashStyle}\n                      />\n                    ),\n              ]\n            : null\n        }>\n        {(selectedSource as any)?.uri || placeholder?.[0]?.uri}\n        {({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) =>\n          (className, style) =>\n            (\n              <ImageWrapper\n                source={selectedSource || placeholder?.[0]}\n                events={{\n                  onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n                  onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n                  onMount: [onMount],\n                  onTransitionEnd: [onAnimationFinished],\n                }}\n                style={{\n                  objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,\n                  ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                  ...style,\n                }}\n                className={className}\n                priority={priority}\n                contentPosition={selectedSource ? contentPosition : { top: '50%', left: '50%' }}\n                blurhashContentPosition={contentPosition}\n                blurhashStyle={blurhashStyle}\n              />\n            )}\n      </AnimationManager>\n    </div>\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"ExpoImage.web.js","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ImageNativeProps, ImageSource, ImageLoadEventData } from './Image.types';\nimport AnimationManager, { AnimationManagerNode } from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/style';\nimport useSourceSelection from './web/useSourceSelection';\n\nloadStyle();\n\nexport const ExpoImageModule = {\n  prefetch(urls: string | string[]): void {\n    const urlsArray = Array.isArray(urls) ? urls : [urls];\n    urlsArray.forEach((url) => {\n      const img = new Image();\n      img.src = url;\n    });\n  },\n\n  async clearMemoryCache(): Promise<boolean> {\n    return false;\n  },\n\n  async clearDiskCache(): Promise<boolean> {\n    return false;\n  },\n};\n\nfunction onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {\n  return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = event.target as HTMLImageElement;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null,\n      },\n      cacheType: 'none',\n    });\n  };\n}\n\nfunction onErrorAdapter(onError?: { (event: { error: string }): void }) {\n  return ({ source }: { source?: ImageSource | null }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`,\n    });\n  };\n}\n\nconst setCssVariables = (element: HTMLElement, size: DOMRect) => {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n};\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  contentFit,\n  contentPosition,\n  placeholderContentFit,\n  onLoad,\n  transition,\n  onError,\n  responsivePolicy,\n  onLoadEnd,\n  priority,\n  blurRadius,\n  recyclingKey,\n  ...props\n}: ImageNativeProps) {\n  const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const blurhashStyle = {\n    objectFit: placeholderContentFit || contentFit,\n  };\n  const { containerRef, source: selectedSource } = useSourceSelection(\n    source,\n    responsivePolicy,\n    setCssVariables\n  );\n\n  const initialNodeAnimationKey =\n    (recyclingKey ? `${recyclingKey}-${placeholder?.[0]?.uri}` : placeholder?.[0]?.uri) ?? '';\n\n  const initialNode: AnimationManagerNode | null = placeholder?.[0]?.uri\n    ? [\n        initialNodeAnimationKey,\n        ({ onAnimationFinished }) =>\n          (className, style) =>\n            (\n              <ImageWrapper\n                {...props}\n                source={placeholder?.[0]}\n                style={{\n                  objectFit: imagePlaceholderContentFit,\n                  ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                  ...style,\n                }}\n                className={className}\n                events={{\n                  onTransitionEnd: [onAnimationFinished],\n                }}\n                contentPosition={{ left: '50%', top: '50%' }}\n                hashPlaceholderContentPosition={contentPosition}\n                hashPlaceholderStyle={blurhashStyle}\n              />\n            ),\n      ]\n    : null;\n\n  const currentNodeAnimationKey =\n    (recyclingKey\n      ? `${recyclingKey}-${selectedSource?.uri ?? placeholder?.[0]?.uri}`\n      : selectedSource?.uri ?? placeholder?.[0]?.uri) ?? '';\n\n  const currentNode: AnimationManagerNode = [\n    currentNodeAnimationKey,\n    ({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) =>\n      (className, style) =>\n        (\n          <ImageWrapper\n            {...props}\n            source={selectedSource || placeholder?.[0]}\n            events={{\n              onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n              onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n              onMount: [onMount],\n              onTransitionEnd: [onAnimationFinished],\n            }}\n            style={{\n              objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,\n              ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n              ...style,\n            }}\n            className={className}\n            priority={priority}\n            contentPosition={selectedSource ? contentPosition : { top: '50%', left: '50%' }}\n            hashPlaceholderContentPosition={contentPosition}\n            hashPlaceholderStyle={blurhashStyle}\n            accessibilityLabel={props.accessibilityLabel}\n          />\n        ),\n  ];\n  return (\n    <div\n      ref={containerRef}\n      className=\"expo-image-container\"\n      style={{\n        aspectRatio: String(aspectRatio),\n        backgroundColor: backgroundColor?.toString(),\n        transform: transform?.toString(),\n        borderColor: borderColor?.toString(),\n        position: 'relative',\n        overflow: 'hidden',\n        ...style,\n      }}>\n      <AnimationManager transition={transition} recyclingKey={recyclingKey} initial={initialNode}>\n        {currentNode}\n      </AnimationManager>\n    </div>\n  );\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-image/src/ExpoImage.web.tsx b/node_modules/expo-image/src/ExpoImage.web.tsx
index affad8a..d80af13 100644
--- a/node_modules/expo-image/src/ExpoImage.web.tsx
+++ b/node_modules/expo-image/src/ExpoImage.web.tsx
@@ -8,6 +8,24 @@ import useSourceSelection from './web/useSourceSelection';
 
 loadStyle();
 
+export const ExpoImageModule = {
+  prefetch(urls: string | string[]): void {
+    const urlsArray = Array.isArray(urls) ? urls : [urls];
+    urlsArray.forEach((url) => {
+      const img = new Image();
+      img.src = url;
+    });
+  },
+
+  async clearMemoryCache(): Promise<boolean> {
+    return false;
+  },
+
+  async clearDiskCache(): Promise<boolean> {
+    return false;
+  },
+};
+
 function onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {
   return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {
     const target = event.target as HTMLImageElement;
