import { onAuthStateChanged, signOut, createUserWithEmailAndPassword } from "firebase/auth";
import { createContext, useState } from "react";
import { auth } from "../firebase/firebase";

export const AuthContext = createContext();

export const AuthProvider = ({ children }) => {
    const [firebaseUser, setFirebaseUser] = useState(null);

    onAuthStateChanged(auth, (user) => {
        if (user) {
            console.log(user);
            // User is signed in, see docs for a list of available properties
            // https://firebase.google.com/docs/reference/js/auth.user
            setFirebaseUser(user);
        } else {
            console.log('no user');
        }
    });

    const createUserAndLogin = async (email, password) => {
        try {
            const userCredential = await createUserWithEmailAndPassword(
                auth,
                email,
                password,
            );

            const user = userCredential.user;

            console.log(user);
        } catch (error) {
            // console.error(error.code);
            // console.error(error.message);
            throw error;
        }
    }

    const logOut = async () => {
        try {
            await signOut(auth);
            setFirebaseUser(null);
        } catch (error) {
            console.error(error);
        }
    };

    return (
        <AuthContext.Provider value={{ firebaseUser, createUserAndLogin, logOut }}>
            {children}
        </AuthContext.Provider>
    );
}